@256			//#0000	<-	WriteInit	<-	Main
D=A			//#0001	<-	WriteInit	<-	Main
@SP			//#0002	<-	WriteInit	<-	Main
M=D			//#0003	<-	WriteInit	<-	Main
@Sys.init			//#0004	<-	WriteInit	<-	Main
0;JMP			//#0005	<-	WriteInit	<-	Main
(Class1.set)			//#0006	<-	writeFunction	<-	Main
@ARG			//#0006	<-	writePushPop	<-	Main
D=M			//#0007	<-	writePushPop	<-	Main
@0			//#0008	<-	writePushPop	<-	Main
A=D+A			//#0009	<-	writePushPop	<-	Main
D=M			//#0010	<-	writePushPop	<-	Main
@SP			//#0011	<-	writePushPop	<-	Main
A=M			//#0012	<-	writePushPop	<-	Main
M=D			//#0013	<-	writePushPop	<-	Main
@SP			//#0014	<-	writePushPop	<-	Main
M=M+1			//#0015	<-	writePushPop	<-	Main
@SP			//#0016	<-	writePushPop	<-	Main
M=M-1			//#0017	<-	writePushPop	<-	Main
@SP			//#0018	<-	writePushPop	<-	Main
A=M			//#0019	<-	writePushPop	<-	Main
D=M			//#0020	<-	writePushPop	<-	Main
@Class1.0			//#0021	<-	writePushPop	<-	Main
M=D			//#0022	<-	writePushPop	<-	Main
@ARG			//#0023	<-	writePushPop	<-	Main
D=M			//#0024	<-	writePushPop	<-	Main
@1			//#0025	<-	writePushPop	<-	Main
A=D+A			//#0026	<-	writePushPop	<-	Main
D=M			//#0027	<-	writePushPop	<-	Main
@SP			//#0028	<-	writePushPop	<-	Main
A=M			//#0029	<-	writePushPop	<-	Main
M=D			//#0030	<-	writePushPop	<-	Main
@SP			//#0031	<-	writePushPop	<-	Main
M=M+1			//#0032	<-	writePushPop	<-	Main
@SP			//#0033	<-	writePushPop	<-	Main
M=M-1			//#0034	<-	writePushPop	<-	Main
@SP			//#0035	<-	writePushPop	<-	Main
A=M			//#0036	<-	writePushPop	<-	Main
D=M			//#0037	<-	writePushPop	<-	Main
@Class1.1			//#0038	<-	writePushPop	<-	Main
M=D			//#0039	<-	writePushPop	<-	Main
@0			//#0040	<-	writePushPop	<-	Main
D=A			//#0041	<-	writePushPop	<-	Main
@SP			//#0042	<-	writePushPop	<-	Main
A=M			//#0043	<-	writePushPop	<-	Main
M=D			//#0044	<-	writePushPop	<-	Main
@SP			//#0045	<-	writePushPop	<-	Main
M=M+1			//#0046	<-	writePushPop	<-	Main
@SP			//#0047	<-	writePushPop	<-	writeReturn
M=M-1			//#0048	<-	writePushPop	<-	writeReturn
@SP			//#0049	<-	writePushPop	<-	writeReturn
A=M			//#0050	<-	writePushPop	<-	writeReturn
D=M			//#0051	<-	writePushPop	<-	writeReturn
@R13			//#0052	<-	writePushPop	<-	writeReturn
M=D			//#0053	<-	writePushPop	<-	writeReturn
@ARG			//#0054	<-	writePushPop	<-	writeReturn
D=M			//#0055	<-	writePushPop	<-	writeReturn
@0			//#0056	<-	writePushPop	<-	writeReturn
D=D+A			//#0057	<-	writePushPop	<-	writeReturn
@R14			//#0058	<-	writePushPop	<-	writeReturn
M=D			//#0059	<-	writePushPop	<-	writeReturn
@R13			//#0060	<-	writePushPop	<-	writeReturn
D=M			//#0061	<-	writePushPop	<-	writeReturn
@R14			//#0062	<-	writePushPop	<-	writeReturn
A=M			//#0063	<-	writePushPop	<-	writeReturn
M=D			//#0064	<-	writePushPop	<-	writeReturn
@LCL			//#0065	<-	writeReturn	<-	Main
D=M			//#0066	<-	writeReturn	<-	Main
@R13			//#0067	<-	writeReturn	<-	Main
M=D			//#0068	<-	writeReturn	<-	Main
@5			//#0069	<-	writeReturn	<-	Main
A=D-A			//#0070	<-	writeReturn	<-	Main
D=M			//#0071	<-	writeReturn	<-	Main
@R14			//#0072	<-	writeReturn	<-	Main
M=D			//#0073	<-	writeReturn	<-	Main
@ARG			//#0074	<-	writeReturn	<-	Main
D=M+1			//#0075	<-	writeReturn	<-	Main
@SP			//#0076	<-	writeReturn	<-	Main
M=D			//#0077	<-	writeReturn	<-	Main
@R13			//#0078	<-	writeReturn	<-	Main
AM=M-1			//#0079	<-	writeReturn	<-	Main
D=M			//#0080	<-	writeReturn	<-	Main
@THAT			//#0081	<-	writeReturn	<-	Main
M=D			//#0082	<-	writeReturn	<-	Main
@R13			//#0083	<-	writeReturn	<-	Main
AM=M-1			//#0084	<-	writeReturn	<-	Main
D=M			//#0085	<-	writeReturn	<-	Main
@THIS			//#0086	<-	writeReturn	<-	Main
M=D			//#0087	<-	writeReturn	<-	Main
@R13			//#0088	<-	writeReturn	<-	Main
AM=M-1			//#0089	<-	writeReturn	<-	Main
D=M			//#0090	<-	writeReturn	<-	Main
@ARG			//#0091	<-	writeReturn	<-	Main
M=D			//#0092	<-	writeReturn	<-	Main
@R13			//#0093	<-	writeReturn	<-	Main
AM=M-1			//#0094	<-	writeReturn	<-	Main
D=M			//#0095	<-	writeReturn	<-	Main
@LCL			//#0096	<-	writeReturn	<-	Main
M=D			//#0097	<-	writeReturn	<-	Main
@R14			//#0098	<-	writeReturn	<-	Main
A=M			//#0099	<-	writeReturn	<-	Main
0;JMP			//#0100	<-	writeReturn	<-	Main
(Class1.get)			//#0101	<-	writeFunction	<-	Main
@Class1.0			//#0101	<-	writePushPop	<-	Main
D=M			//#0102	<-	writePushPop	<-	Main
@SP			//#0103	<-	writePushPop	<-	Main
A=M			//#0104	<-	writePushPop	<-	Main
M=D			//#0105	<-	writePushPop	<-	Main
@SP			//#0106	<-	writePushPop	<-	Main
M=M+1			//#0107	<-	writePushPop	<-	Main
@Class1.1			//#0108	<-	writePushPop	<-	Main
D=M			//#0109	<-	writePushPop	<-	Main
@SP			//#0110	<-	writePushPop	<-	Main
A=M			//#0111	<-	writePushPop	<-	Main
M=D			//#0112	<-	writePushPop	<-	Main
@SP			//#0113	<-	writePushPop	<-	Main
M=M+1			//#0114	<-	writePushPop	<-	Main
@SP			//#0115	<-	writeArithmetic	<-	Main
M=M-1			//#0116	<-	writeArithmetic	<-	Main
A=M			//#0117	<-	writeArithmetic	<-	Main
D=M			//#0118	<-	writeArithmetic	<-	Main
@R13			//#0119	<-	writeArithmetic	<-	Main
M=D			//#0120	<-	writeArithmetic	<-	Main
@SP			//#0121	<-	writeArithmetic	<-	Main
A=M-1			//#0122	<-	writeArithmetic	<-	Main
D=M			//#0123	<-	writeArithmetic	<-	Main
@R13			//#0124	<-	writeArithmetic	<-	Main
D=D-M			//#0125	<-	writeArithmetic	<-	Main
@SP			//#0126	<-	writeArithmetic	<-	Main
A=M-1			//#0127	<-	writeArithmetic	<-	Main
M=D			//#0128	<-	writeArithmetic	<-	Main
@SP			//#0129	<-	writePushPop	<-	writeReturn
M=M-1			//#0130	<-	writePushPop	<-	writeReturn
@SP			//#0131	<-	writePushPop	<-	writeReturn
A=M			//#0132	<-	writePushPop	<-	writeReturn
D=M			//#0133	<-	writePushPop	<-	writeReturn
@R13			//#0134	<-	writePushPop	<-	writeReturn
M=D			//#0135	<-	writePushPop	<-	writeReturn
@ARG			//#0136	<-	writePushPop	<-	writeReturn
D=M			//#0137	<-	writePushPop	<-	writeReturn
@0			//#0138	<-	writePushPop	<-	writeReturn
D=D+A			//#0139	<-	writePushPop	<-	writeReturn
@R14			//#0140	<-	writePushPop	<-	writeReturn
M=D			//#0141	<-	writePushPop	<-	writeReturn
@R13			//#0142	<-	writePushPop	<-	writeReturn
D=M			//#0143	<-	writePushPop	<-	writeReturn
@R14			//#0144	<-	writePushPop	<-	writeReturn
A=M			//#0145	<-	writePushPop	<-	writeReturn
M=D			//#0146	<-	writePushPop	<-	writeReturn
@LCL			//#0147	<-	writeReturn	<-	Main
D=M			//#0148	<-	writeReturn	<-	Main
@R13			//#0149	<-	writeReturn	<-	Main
M=D			//#0150	<-	writeReturn	<-	Main
@5			//#0151	<-	writeReturn	<-	Main
A=D-A			//#0152	<-	writeReturn	<-	Main
D=M			//#0153	<-	writeReturn	<-	Main
@R14			//#0154	<-	writeReturn	<-	Main
M=D			//#0155	<-	writeReturn	<-	Main
@ARG			//#0156	<-	writeReturn	<-	Main
D=M+1			//#0157	<-	writeReturn	<-	Main
@SP			//#0158	<-	writeReturn	<-	Main
M=D			//#0159	<-	writeReturn	<-	Main
@R13			//#0160	<-	writeReturn	<-	Main
AM=M-1			//#0161	<-	writeReturn	<-	Main
D=M			//#0162	<-	writeReturn	<-	Main
@THAT			//#0163	<-	writeReturn	<-	Main
M=D			//#0164	<-	writeReturn	<-	Main
@R13			//#0165	<-	writeReturn	<-	Main
AM=M-1			//#0166	<-	writeReturn	<-	Main
D=M			//#0167	<-	writeReturn	<-	Main
@THIS			//#0168	<-	writeReturn	<-	Main
M=D			//#0169	<-	writeReturn	<-	Main
@R13			//#0170	<-	writeReturn	<-	Main
AM=M-1			//#0171	<-	writeReturn	<-	Main
D=M			//#0172	<-	writeReturn	<-	Main
@ARG			//#0173	<-	writeReturn	<-	Main
M=D			//#0174	<-	writeReturn	<-	Main
@R13			//#0175	<-	writeReturn	<-	Main
AM=M-1			//#0176	<-	writeReturn	<-	Main
D=M			//#0177	<-	writeReturn	<-	Main
@LCL			//#0178	<-	writeReturn	<-	Main
M=D			//#0179	<-	writeReturn	<-	Main
@R14			//#0180	<-	writeReturn	<-	Main
A=M			//#0181	<-	writeReturn	<-	Main
0;JMP			//#0182	<-	writeReturn	<-	Main
(Class2.set)			//#0183	<-	writeFunction	<-	Main
@ARG			//#0183	<-	writePushPop	<-	Main
D=M			//#0184	<-	writePushPop	<-	Main
@0			//#0185	<-	writePushPop	<-	Main
A=D+A			//#0186	<-	writePushPop	<-	Main
D=M			//#0187	<-	writePushPop	<-	Main
@SP			//#0188	<-	writePushPop	<-	Main
A=M			//#0189	<-	writePushPop	<-	Main
M=D			//#0190	<-	writePushPop	<-	Main
@SP			//#0191	<-	writePushPop	<-	Main
M=M+1			//#0192	<-	writePushPop	<-	Main
@SP			//#0193	<-	writePushPop	<-	Main
M=M-1			//#0194	<-	writePushPop	<-	Main
@SP			//#0195	<-	writePushPop	<-	Main
A=M			//#0196	<-	writePushPop	<-	Main
D=M			//#0197	<-	writePushPop	<-	Main
@Class2.0			//#0198	<-	writePushPop	<-	Main
M=D			//#0199	<-	writePushPop	<-	Main
@ARG			//#0200	<-	writePushPop	<-	Main
D=M			//#0201	<-	writePushPop	<-	Main
@1			//#0202	<-	writePushPop	<-	Main
A=D+A			//#0203	<-	writePushPop	<-	Main
D=M			//#0204	<-	writePushPop	<-	Main
@SP			//#0205	<-	writePushPop	<-	Main
A=M			//#0206	<-	writePushPop	<-	Main
M=D			//#0207	<-	writePushPop	<-	Main
@SP			//#0208	<-	writePushPop	<-	Main
M=M+1			//#0209	<-	writePushPop	<-	Main
@SP			//#0210	<-	writePushPop	<-	Main
M=M-1			//#0211	<-	writePushPop	<-	Main
@SP			//#0212	<-	writePushPop	<-	Main
A=M			//#0213	<-	writePushPop	<-	Main
D=M			//#0214	<-	writePushPop	<-	Main
@Class2.1			//#0215	<-	writePushPop	<-	Main
M=D			//#0216	<-	writePushPop	<-	Main
@0			//#0217	<-	writePushPop	<-	Main
D=A			//#0218	<-	writePushPop	<-	Main
@SP			//#0219	<-	writePushPop	<-	Main
A=M			//#0220	<-	writePushPop	<-	Main
M=D			//#0221	<-	writePushPop	<-	Main
@SP			//#0222	<-	writePushPop	<-	Main
M=M+1			//#0223	<-	writePushPop	<-	Main
@SP			//#0224	<-	writePushPop	<-	writeReturn
M=M-1			//#0225	<-	writePushPop	<-	writeReturn
@SP			//#0226	<-	writePushPop	<-	writeReturn
A=M			//#0227	<-	writePushPop	<-	writeReturn
D=M			//#0228	<-	writePushPop	<-	writeReturn
@R13			//#0229	<-	writePushPop	<-	writeReturn
M=D			//#0230	<-	writePushPop	<-	writeReturn
@ARG			//#0231	<-	writePushPop	<-	writeReturn
D=M			//#0232	<-	writePushPop	<-	writeReturn
@0			//#0233	<-	writePushPop	<-	writeReturn
D=D+A			//#0234	<-	writePushPop	<-	writeReturn
@R14			//#0235	<-	writePushPop	<-	writeReturn
M=D			//#0236	<-	writePushPop	<-	writeReturn
@R13			//#0237	<-	writePushPop	<-	writeReturn
D=M			//#0238	<-	writePushPop	<-	writeReturn
@R14			//#0239	<-	writePushPop	<-	writeReturn
A=M			//#0240	<-	writePushPop	<-	writeReturn
M=D			//#0241	<-	writePushPop	<-	writeReturn
@LCL			//#0242	<-	writeReturn	<-	Main
D=M			//#0243	<-	writeReturn	<-	Main
@R13			//#0244	<-	writeReturn	<-	Main
M=D			//#0245	<-	writeReturn	<-	Main
@5			//#0246	<-	writeReturn	<-	Main
A=D-A			//#0247	<-	writeReturn	<-	Main
D=M			//#0248	<-	writeReturn	<-	Main
@R14			//#0249	<-	writeReturn	<-	Main
M=D			//#0250	<-	writeReturn	<-	Main
@ARG			//#0251	<-	writeReturn	<-	Main
D=M+1			//#0252	<-	writeReturn	<-	Main
@SP			//#0253	<-	writeReturn	<-	Main
M=D			//#0254	<-	writeReturn	<-	Main
@R13			//#0255	<-	writeReturn	<-	Main
AM=M-1			//#0256	<-	writeReturn	<-	Main
D=M			//#0257	<-	writeReturn	<-	Main
@THAT			//#0258	<-	writeReturn	<-	Main
M=D			//#0259	<-	writeReturn	<-	Main
@R13			//#0260	<-	writeReturn	<-	Main
AM=M-1			//#0261	<-	writeReturn	<-	Main
D=M			//#0262	<-	writeReturn	<-	Main
@THIS			//#0263	<-	writeReturn	<-	Main
M=D			//#0264	<-	writeReturn	<-	Main
@R13			//#0265	<-	writeReturn	<-	Main
AM=M-1			//#0266	<-	writeReturn	<-	Main
D=M			//#0267	<-	writeReturn	<-	Main
@ARG			//#0268	<-	writeReturn	<-	Main
M=D			//#0269	<-	writeReturn	<-	Main
@R13			//#0270	<-	writeReturn	<-	Main
AM=M-1			//#0271	<-	writeReturn	<-	Main
D=M			//#0272	<-	writeReturn	<-	Main
@LCL			//#0273	<-	writeReturn	<-	Main
M=D			//#0274	<-	writeReturn	<-	Main
@R14			//#0275	<-	writeReturn	<-	Main
A=M			//#0276	<-	writeReturn	<-	Main
0;JMP			//#0277	<-	writeReturn	<-	Main
(Class2.get)			//#0278	<-	writeFunction	<-	Main
@Class2.0			//#0278	<-	writePushPop	<-	Main
D=M			//#0279	<-	writePushPop	<-	Main
@SP			//#0280	<-	writePushPop	<-	Main
A=M			//#0281	<-	writePushPop	<-	Main
M=D			//#0282	<-	writePushPop	<-	Main
@SP			//#0283	<-	writePushPop	<-	Main
M=M+1			//#0284	<-	writePushPop	<-	Main
@Class2.1			//#0285	<-	writePushPop	<-	Main
D=M			//#0286	<-	writePushPop	<-	Main
@SP			//#0287	<-	writePushPop	<-	Main
A=M			//#0288	<-	writePushPop	<-	Main
M=D			//#0289	<-	writePushPop	<-	Main
@SP			//#0290	<-	writePushPop	<-	Main
M=M+1			//#0291	<-	writePushPop	<-	Main
@SP			//#0292	<-	writeArithmetic	<-	Main
M=M-1			//#0293	<-	writeArithmetic	<-	Main
A=M			//#0294	<-	writeArithmetic	<-	Main
D=M			//#0295	<-	writeArithmetic	<-	Main
@R13			//#0296	<-	writeArithmetic	<-	Main
M=D			//#0297	<-	writeArithmetic	<-	Main
@SP			//#0298	<-	writeArithmetic	<-	Main
A=M-1			//#0299	<-	writeArithmetic	<-	Main
D=M			//#0300	<-	writeArithmetic	<-	Main
@R13			//#0301	<-	writeArithmetic	<-	Main
D=D-M			//#0302	<-	writeArithmetic	<-	Main
@SP			//#0303	<-	writeArithmetic	<-	Main
A=M-1			//#0304	<-	writeArithmetic	<-	Main
M=D			//#0305	<-	writeArithmetic	<-	Main
@SP			//#0306	<-	writePushPop	<-	writeReturn
M=M-1			//#0307	<-	writePushPop	<-	writeReturn
@SP			//#0308	<-	writePushPop	<-	writeReturn
A=M			//#0309	<-	writePushPop	<-	writeReturn
D=M			//#0310	<-	writePushPop	<-	writeReturn
@R13			//#0311	<-	writePushPop	<-	writeReturn
M=D			//#0312	<-	writePushPop	<-	writeReturn
@ARG			//#0313	<-	writePushPop	<-	writeReturn
D=M			//#0314	<-	writePushPop	<-	writeReturn
@0			//#0315	<-	writePushPop	<-	writeReturn
D=D+A			//#0316	<-	writePushPop	<-	writeReturn
@R14			//#0317	<-	writePushPop	<-	writeReturn
M=D			//#0318	<-	writePushPop	<-	writeReturn
@R13			//#0319	<-	writePushPop	<-	writeReturn
D=M			//#0320	<-	writePushPop	<-	writeReturn
@R14			//#0321	<-	writePushPop	<-	writeReturn
A=M			//#0322	<-	writePushPop	<-	writeReturn
M=D			//#0323	<-	writePushPop	<-	writeReturn
@LCL			//#0324	<-	writeReturn	<-	Main
D=M			//#0325	<-	writeReturn	<-	Main
@R13			//#0326	<-	writeReturn	<-	Main
M=D			//#0327	<-	writeReturn	<-	Main
@5			//#0328	<-	writeReturn	<-	Main
A=D-A			//#0329	<-	writeReturn	<-	Main
D=M			//#0330	<-	writeReturn	<-	Main
@R14			//#0331	<-	writeReturn	<-	Main
M=D			//#0332	<-	writeReturn	<-	Main
@ARG			//#0333	<-	writeReturn	<-	Main
D=M+1			//#0334	<-	writeReturn	<-	Main
@SP			//#0335	<-	writeReturn	<-	Main
M=D			//#0336	<-	writeReturn	<-	Main
@R13			//#0337	<-	writeReturn	<-	Main
AM=M-1			//#0338	<-	writeReturn	<-	Main
D=M			//#0339	<-	writeReturn	<-	Main
@THAT			//#0340	<-	writeReturn	<-	Main
M=D			//#0341	<-	writeReturn	<-	Main
@R13			//#0342	<-	writeReturn	<-	Main
AM=M-1			//#0343	<-	writeReturn	<-	Main
D=M			//#0344	<-	writeReturn	<-	Main
@THIS			//#0345	<-	writeReturn	<-	Main
M=D			//#0346	<-	writeReturn	<-	Main
@R13			//#0347	<-	writeReturn	<-	Main
AM=M-1			//#0348	<-	writeReturn	<-	Main
D=M			//#0349	<-	writeReturn	<-	Main
@ARG			//#0350	<-	writeReturn	<-	Main
M=D			//#0351	<-	writeReturn	<-	Main
@R13			//#0352	<-	writeReturn	<-	Main
AM=M-1			//#0353	<-	writeReturn	<-	Main
D=M			//#0354	<-	writeReturn	<-	Main
@LCL			//#0355	<-	writeReturn	<-	Main
M=D			//#0356	<-	writeReturn	<-	Main
@R14			//#0357	<-	writeReturn	<-	Main
A=M			//#0358	<-	writeReturn	<-	Main
0;JMP			//#0359	<-	writeReturn	<-	Main
(Sys.init)			//#0360	<-	writeFunction	<-	Main
@6			//#0360	<-	writePushPop	<-	Main
D=A			//#0361	<-	writePushPop	<-	Main
@SP			//#0362	<-	writePushPop	<-	Main
A=M			//#0363	<-	writePushPop	<-	Main
M=D			//#0364	<-	writePushPop	<-	Main
@SP			//#0365	<-	writePushPop	<-	Main
M=M+1			//#0366	<-	writePushPop	<-	Main
@8			//#0367	<-	writePushPop	<-	Main
D=A			//#0368	<-	writePushPop	<-	Main
@SP			//#0369	<-	writePushPop	<-	Main
A=M			//#0370	<-	writePushPop	<-	Main
M=D			//#0371	<-	writePushPop	<-	Main
@SP			//#0372	<-	writePushPop	<-	Main
M=M+1			//#0373	<-	writePushPop	<-	Main
@Class1.set_FUNC_CALL3			//#0374	<-	writeCall	<-	Main
D=A			//#0375	<-	writeCall	<-	Main
@SP			//#0376	<-	writeCall	<-	Main
A=M			//#0377	<-	writeCall	<-	Main
M=D			//#0378	<-	writeCall	<-	Main
@SP			//#0379	<-	writeCall	<-	Main
M=M+1			//#0380	<-	writeCall	<-	Main
@LCL			//#0381	<-	writeCall	<-	Main
D=M			//#0382	<-	writeCall	<-	Main
@SP			//#0383	<-	writeCall	<-	Main
A=M			//#0384	<-	writeCall	<-	Main
M=D			//#0385	<-	writeCall	<-	Main
@SP			//#0386	<-	writeCall	<-	Main
M=M+1			//#0387	<-	writeCall	<-	Main
@ARG			//#0388	<-	writeCall	<-	Main
D=M			//#0389	<-	writeCall	<-	Main
@SP			//#0390	<-	writeCall	<-	Main
A=M			//#0391	<-	writeCall	<-	Main
M=D			//#0392	<-	writeCall	<-	Main
@SP			//#0393	<-	writeCall	<-	Main
M=M+1			//#0394	<-	writeCall	<-	Main
@THIS			//#0395	<-	writeCall	<-	Main
D=M			//#0396	<-	writeCall	<-	Main
@SP			//#0397	<-	writeCall	<-	Main
A=M			//#0398	<-	writeCall	<-	Main
M=D			//#0399	<-	writeCall	<-	Main
@SP			//#0400	<-	writeCall	<-	Main
M=M+1			//#0401	<-	writeCall	<-	Main
@THAT			//#0402	<-	writeCall	<-	Main
D=M			//#0403	<-	writeCall	<-	Main
@SP			//#0404	<-	writeCall	<-	Main
A=M			//#0405	<-	writeCall	<-	Main
M=D			//#0406	<-	writeCall	<-	Main
@SP			//#0407	<-	writeCall	<-	Main
M=M+1			//#0408	<-	writeCall	<-	Main
@SP			//#0409	<-	writeCall	<-	Main
D=M			//#0410	<-	writeCall	<-	Main
@7			//#0411	<-	writeCall	<-	Main
D=D-A			//#0412	<-	writeCall	<-	Main
@ARG			//#0413	<-	writeCall	<-	Main
M=D			//#0414	<-	writeCall	<-	Main
@SP			//#0415	<-	writeCall	<-	Main
D=M			//#0416	<-	writeCall	<-	Main
@LCL			//#0417	<-	writeCall	<-	Main
M=D			//#0418	<-	writeCall	<-	Main
@Sys.init$Class1.set			//#0419	<-	writeGoto	<-	writeCall
0;JMP			//#0420	<-	writeGoto	<-	writeCall
(Class1.set_FUNC_CALL3)			//#0421	<-	writeCall	<-	Main
@SP			//#0421	<-	writePushPop	<-	Main
M=M-1			//#0422	<-	writePushPop	<-	Main
@SP			//#0423	<-	writePushPop	<-	Main
A=M			//#0424	<-	writePushPop	<-	Main
D=M			//#0425	<-	writePushPop	<-	Main
@5			//#0426	<-	writePushPop	<-	Main
M=D			//#0427	<-	writePushPop	<-	Main
@23			//#0428	<-	writePushPop	<-	Main
D=A			//#0429	<-	writePushPop	<-	Main
@SP			//#0430	<-	writePushPop	<-	Main
A=M			//#0431	<-	writePushPop	<-	Main
M=D			//#0432	<-	writePushPop	<-	Main
@SP			//#0433	<-	writePushPop	<-	Main
M=M+1			//#0434	<-	writePushPop	<-	Main
@15			//#0435	<-	writePushPop	<-	Main
D=A			//#0436	<-	writePushPop	<-	Main
@SP			//#0437	<-	writePushPop	<-	Main
A=M			//#0438	<-	writePushPop	<-	Main
M=D			//#0439	<-	writePushPop	<-	Main
@SP			//#0440	<-	writePushPop	<-	Main
M=M+1			//#0441	<-	writePushPop	<-	Main
@Class2.set_FUNC_CALL4			//#0442	<-	writeCall	<-	Main
D=A			//#0443	<-	writeCall	<-	Main
@SP			//#0444	<-	writeCall	<-	Main
A=M			//#0445	<-	writeCall	<-	Main
M=D			//#0446	<-	writeCall	<-	Main
@SP			//#0447	<-	writeCall	<-	Main
M=M+1			//#0448	<-	writeCall	<-	Main
@LCL			//#0449	<-	writeCall	<-	Main
D=M			//#0450	<-	writeCall	<-	Main
@SP			//#0451	<-	writeCall	<-	Main
A=M			//#0452	<-	writeCall	<-	Main
M=D			//#0453	<-	writeCall	<-	Main
@SP			//#0454	<-	writeCall	<-	Main
M=M+1			//#0455	<-	writeCall	<-	Main
@ARG			//#0456	<-	writeCall	<-	Main
D=M			//#0457	<-	writeCall	<-	Main
@SP			//#0458	<-	writeCall	<-	Main
A=M			//#0459	<-	writeCall	<-	Main
M=D			//#0460	<-	writeCall	<-	Main
@SP			//#0461	<-	writeCall	<-	Main
M=M+1			//#0462	<-	writeCall	<-	Main
@THIS			//#0463	<-	writeCall	<-	Main
D=M			//#0464	<-	writeCall	<-	Main
@SP			//#0465	<-	writeCall	<-	Main
A=M			//#0466	<-	writeCall	<-	Main
M=D			//#0467	<-	writeCall	<-	Main
@SP			//#0468	<-	writeCall	<-	Main
M=M+1			//#0469	<-	writeCall	<-	Main
@THAT			//#0470	<-	writeCall	<-	Main
D=M			//#0471	<-	writeCall	<-	Main
@SP			//#0472	<-	writeCall	<-	Main
A=M			//#0473	<-	writeCall	<-	Main
M=D			//#0474	<-	writeCall	<-	Main
@SP			//#0475	<-	writeCall	<-	Main
M=M+1			//#0476	<-	writeCall	<-	Main
@SP			//#0477	<-	writeCall	<-	Main
D=M			//#0478	<-	writeCall	<-	Main
@7			//#0479	<-	writeCall	<-	Main
D=D-A			//#0480	<-	writeCall	<-	Main
@ARG			//#0481	<-	writeCall	<-	Main
M=D			//#0482	<-	writeCall	<-	Main
@SP			//#0483	<-	writeCall	<-	Main
D=M			//#0484	<-	writeCall	<-	Main
@LCL			//#0485	<-	writeCall	<-	Main
M=D			//#0486	<-	writeCall	<-	Main
@Sys.init$Class2.set			//#0487	<-	writeGoto	<-	writeCall
0;JMP			//#0488	<-	writeGoto	<-	writeCall
(Class2.set_FUNC_CALL4)			//#0489	<-	writeCall	<-	Main
@SP			//#0489	<-	writePushPop	<-	Main
M=M-1			//#0490	<-	writePushPop	<-	Main
@SP			//#0491	<-	writePushPop	<-	Main
A=M			//#0492	<-	writePushPop	<-	Main
D=M			//#0493	<-	writePushPop	<-	Main
@5			//#0494	<-	writePushPop	<-	Main
M=D			//#0495	<-	writePushPop	<-	Main
@Class1.get_FUNC_CALL5			//#0496	<-	writeCall	<-	Main
D=A			//#0497	<-	writeCall	<-	Main
@SP			//#0498	<-	writeCall	<-	Main
A=M			//#0499	<-	writeCall	<-	Main
M=D			//#0500	<-	writeCall	<-	Main
@SP			//#0501	<-	writeCall	<-	Main
M=M+1			//#0502	<-	writeCall	<-	Main
@LCL			//#0503	<-	writeCall	<-	Main
D=M			//#0504	<-	writeCall	<-	Main
@SP			//#0505	<-	writeCall	<-	Main
A=M			//#0506	<-	writeCall	<-	Main
M=D			//#0507	<-	writeCall	<-	Main
@SP			//#0508	<-	writeCall	<-	Main
M=M+1			//#0509	<-	writeCall	<-	Main
@ARG			//#0510	<-	writeCall	<-	Main
D=M			//#0511	<-	writeCall	<-	Main
@SP			//#0512	<-	writeCall	<-	Main
A=M			//#0513	<-	writeCall	<-	Main
M=D			//#0514	<-	writeCall	<-	Main
@SP			//#0515	<-	writeCall	<-	Main
M=M+1			//#0516	<-	writeCall	<-	Main
@THIS			//#0517	<-	writeCall	<-	Main
D=M			//#0518	<-	writeCall	<-	Main
@SP			//#0519	<-	writeCall	<-	Main
A=M			//#0520	<-	writeCall	<-	Main
M=D			//#0521	<-	writeCall	<-	Main
@SP			//#0522	<-	writeCall	<-	Main
M=M+1			//#0523	<-	writeCall	<-	Main
@THAT			//#0524	<-	writeCall	<-	Main
D=M			//#0525	<-	writeCall	<-	Main
@SP			//#0526	<-	writeCall	<-	Main
A=M			//#0527	<-	writeCall	<-	Main
M=D			//#0528	<-	writeCall	<-	Main
@SP			//#0529	<-	writeCall	<-	Main
M=M+1			//#0530	<-	writeCall	<-	Main
@SP			//#0531	<-	writeCall	<-	Main
D=M			//#0532	<-	writeCall	<-	Main
@5			//#0533	<-	writeCall	<-	Main
D=D-A			//#0534	<-	writeCall	<-	Main
@ARG			//#0535	<-	writeCall	<-	Main
M=D			//#0536	<-	writeCall	<-	Main
@SP			//#0537	<-	writeCall	<-	Main
D=M			//#0538	<-	writeCall	<-	Main
@LCL			//#0539	<-	writeCall	<-	Main
M=D			//#0540	<-	writeCall	<-	Main
@Sys.init$Class1.get			//#0541	<-	writeGoto	<-	writeCall
0;JMP			//#0542	<-	writeGoto	<-	writeCall
(Class1.get_FUNC_CALL5)			//#0543	<-	writeCall	<-	Main
@Class2.get_FUNC_CALL6			//#0543	<-	writeCall	<-	Main
D=A			//#0544	<-	writeCall	<-	Main
@SP			//#0545	<-	writeCall	<-	Main
A=M			//#0546	<-	writeCall	<-	Main
M=D			//#0547	<-	writeCall	<-	Main
@SP			//#0548	<-	writeCall	<-	Main
M=M+1			//#0549	<-	writeCall	<-	Main
@LCL			//#0550	<-	writeCall	<-	Main
D=M			//#0551	<-	writeCall	<-	Main
@SP			//#0552	<-	writeCall	<-	Main
A=M			//#0553	<-	writeCall	<-	Main
M=D			//#0554	<-	writeCall	<-	Main
@SP			//#0555	<-	writeCall	<-	Main
M=M+1			//#0556	<-	writeCall	<-	Main
@ARG			//#0557	<-	writeCall	<-	Main
D=M			//#0558	<-	writeCall	<-	Main
@SP			//#0559	<-	writeCall	<-	Main
A=M			//#0560	<-	writeCall	<-	Main
M=D			//#0561	<-	writeCall	<-	Main
@SP			//#0562	<-	writeCall	<-	Main
M=M+1			//#0563	<-	writeCall	<-	Main
@THIS			//#0564	<-	writeCall	<-	Main
D=M			//#0565	<-	writeCall	<-	Main
@SP			//#0566	<-	writeCall	<-	Main
A=M			//#0567	<-	writeCall	<-	Main
M=D			//#0568	<-	writeCall	<-	Main
@SP			//#0569	<-	writeCall	<-	Main
M=M+1			//#0570	<-	writeCall	<-	Main
@THAT			//#0571	<-	writeCall	<-	Main
D=M			//#0572	<-	writeCall	<-	Main
@SP			//#0573	<-	writeCall	<-	Main
A=M			//#0574	<-	writeCall	<-	Main
M=D			//#0575	<-	writeCall	<-	Main
@SP			//#0576	<-	writeCall	<-	Main
M=M+1			//#0577	<-	writeCall	<-	Main
@SP			//#0578	<-	writeCall	<-	Main
D=M			//#0579	<-	writeCall	<-	Main
@5			//#0580	<-	writeCall	<-	Main
D=D-A			//#0581	<-	writeCall	<-	Main
@ARG			//#0582	<-	writeCall	<-	Main
M=D			//#0583	<-	writeCall	<-	Main
@SP			//#0584	<-	writeCall	<-	Main
D=M			//#0585	<-	writeCall	<-	Main
@LCL			//#0586	<-	writeCall	<-	Main
M=D			//#0587	<-	writeCall	<-	Main
@Sys.init$Class2.get			//#0588	<-	writeGoto	<-	writeCall
0;JMP			//#0589	<-	writeGoto	<-	writeCall
(Class2.get_FUNC_CALL6)			//#0590	<-	writeCall	<-	Main
(Sys.init$WHILE)			//#0590	<-	writeLabel	<-	Main
@Sys.init$WHILE			//#0590	<-	writeGoto	<-	Main
0;JMP			//#0591	<-	writeGoto	<-	Main
